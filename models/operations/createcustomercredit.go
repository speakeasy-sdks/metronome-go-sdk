// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/Metronome-Industries/metronome-go-sdk/internal/utils"
	"github.com/Metronome-Industries/metronome-go-sdk/models/components"
	"time"
)

type CreateCustomerCreditScheduleItems struct {
	Amount float64 `json:"amount"`
	// RFC 3339 timestamp (inclusive)
	StartingAt time.Time `json:"starting_at"`
	// RFC 3339 timestamp (exclusive)
	EndingBefore time.Time `json:"ending_before"`
}

func (c CreateCustomerCreditScheduleItems) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateCustomerCreditScheduleItems) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateCustomerCreditScheduleItems) GetAmount() float64 {
	if o == nil {
		return 0.0
	}
	return o.Amount
}

func (o *CreateCustomerCreditScheduleItems) GetStartingAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartingAt
}

func (o *CreateCustomerCreditScheduleItems) GetEndingBefore() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.EndingBefore
}

// CreateCustomerCreditAccessSchedule - Schedule for distributing the credit to the customer.
type CreateCustomerCreditAccessSchedule struct {
	CreditTypeID  *string                             `json:"credit_type_id,omitempty"`
	ScheduleItems []CreateCustomerCreditScheduleItems `json:"schedule_items"`
}

func (o *CreateCustomerCreditAccessSchedule) GetCreditTypeID() *string {
	if o == nil {
		return nil
	}
	return o.CreditTypeID
}

func (o *CreateCustomerCreditAccessSchedule) GetScheduleItems() []CreateCustomerCreditScheduleItems {
	if o == nil {
		return []CreateCustomerCreditScheduleItems{}
	}
	return o.ScheduleItems
}

// CreateCustomerCreditRequestBody - Create a credit
type CreateCustomerCreditRequestBody struct {
	CustomerID string `json:"customer_id"`
	// displayed on invoices
	Name *string `json:"name,omitempty"`
	// Used only in UI/API. It is not exposed to end customers.
	Description *string `json:"description,omitempty"`
	// If multiple credits or commits are applicable, the one with the lower priority will apply first.
	Priority  float64 `json:"priority"`
	ProductID string  `json:"product_id"`
	// Schedule for distributing the credit to the customer.
	AccessSchedule CreateCustomerCreditAccessSchedule `json:"access_schedule"`
	// Which products the credit applies to. If both applicable_product_ids and applicable_product_tags are not provided, the credit applies to all products.
	ApplicableProductIds []string `json:"applicable_product_ids,omitempty"`
	// Which tags the credit applies to. If both applicable_product_ids and applicable_product_tags are not provided, the credit applies to all products.
	ApplicableProductTags []string `json:"applicable_product_tags,omitempty"`
	// Which contract the credit applies to. If not provided, the credit applies to all contracts.
	ApplicableContractIds []string `json:"applicable_contract_ids,omitempty"`
	// This field's availability is dependent on your client's configuration.
	NetsuiteSalesOrderID *string `json:"netsuite_sales_order_id,omitempty"`
	// This field's availability is dependent on your client's configuration.
	SalesforceOpportunityID *string           `json:"salesforce_opportunity_id,omitempty"`
	CustomFields            map[string]string `json:"custom_fields,omitempty"`
}

func (o *CreateCustomerCreditRequestBody) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *CreateCustomerCreditRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CreateCustomerCreditRequestBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateCustomerCreditRequestBody) GetPriority() float64 {
	if o == nil {
		return 0.0
	}
	return o.Priority
}

func (o *CreateCustomerCreditRequestBody) GetProductID() string {
	if o == nil {
		return ""
	}
	return o.ProductID
}

func (o *CreateCustomerCreditRequestBody) GetAccessSchedule() CreateCustomerCreditAccessSchedule {
	if o == nil {
		return CreateCustomerCreditAccessSchedule{}
	}
	return o.AccessSchedule
}

func (o *CreateCustomerCreditRequestBody) GetApplicableProductIds() []string {
	if o == nil {
		return nil
	}
	return o.ApplicableProductIds
}

func (o *CreateCustomerCreditRequestBody) GetApplicableProductTags() []string {
	if o == nil {
		return nil
	}
	return o.ApplicableProductTags
}

func (o *CreateCustomerCreditRequestBody) GetApplicableContractIds() []string {
	if o == nil {
		return nil
	}
	return o.ApplicableContractIds
}

func (o *CreateCustomerCreditRequestBody) GetNetsuiteSalesOrderID() *string {
	if o == nil {
		return nil
	}
	return o.NetsuiteSalesOrderID
}

func (o *CreateCustomerCreditRequestBody) GetSalesforceOpportunityID() *string {
	if o == nil {
		return nil
	}
	return o.SalesforceOpportunityID
}

func (o *CreateCustomerCreditRequestBody) GetCustomFields() map[string]string {
	if o == nil {
		return nil
	}
	return o.CustomFields
}

type CreateCustomerCreditData struct {
	ID string `json:"id"`
}

func (o *CreateCustomerCreditData) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// CreateCustomerCreditResponseBody - Success
type CreateCustomerCreditResponseBody struct {
	Data CreateCustomerCreditData `json:"data"`
}

func (o *CreateCustomerCreditResponseBody) GetData() CreateCustomerCreditData {
	if o == nil {
		return CreateCustomerCreditData{}
	}
	return o.Data
}

type CreateCustomerCreditResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Object *CreateCustomerCreditResponseBody
}

func (o *CreateCustomerCreditResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateCustomerCreditResponse) GetObject() *CreateCustomerCreditResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
