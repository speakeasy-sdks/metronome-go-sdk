// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/metronome-go-sdk/internal/utils"
	"github.com/speakeasy-sdks/metronome-go-sdk/models/components"
	"time"
)

type CreditTypeConversions struct {
	CustomCreditTypeID  string  `json:"custom_credit_type_id"`
	FiatPerCustomCredit float64 `json:"fiat_per_custom_credit"`
}

func (o *CreditTypeConversions) GetCustomCreditTypeID() string {
	if o == nil {
		return ""
	}
	return o.CustomCreditTypeID
}

func (o *CreditTypeConversions) GetFiatPerCustomCredit() float64 {
	if o == nil {
		return 0.0
	}
	return o.FiatPerCustomCredit
}

type Aliases struct {
	Name         string     `json:"name"`
	StartingAt   *time.Time `json:"starting_at,omitempty"`
	EndingBefore *time.Time `json:"ending_before,omitempty"`
}

func (a Aliases) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *Aliases) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Aliases) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Aliases) GetStartingAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartingAt
}

func (o *Aliases) GetEndingBefore() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndingBefore
}

// CreateRateCardRequestBody - Create a new rate card
type CreateRateCardRequestBody struct {
	// Used only in UI/API. It is not exposed to end customers.
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
	// "The Metronome ID of the credit type to associate with the rate card, defaults to USD (cents) if not passed."
	FiatCreditTypeID *string `json:"fiat_credit_type_id,omitempty"`
	// Required when using custom pricing units in rates.
	CreditTypeConversions []CreditTypeConversions `json:"credit_type_conversions,omitempty"`
	// Reference this alias when creating a contract. If the same alias is assigned to multiple rate cards, it will reference the rate card to which it was most recently assigned. It is not exposed to end customers.
	Aliases      []Aliases         `json:"aliases,omitempty"`
	CustomFields map[string]string `json:"custom_fields,omitempty"`
}

func (o *CreateRateCardRequestBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateRateCardRequestBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateRateCardRequestBody) GetFiatCreditTypeID() *string {
	if o == nil {
		return nil
	}
	return o.FiatCreditTypeID
}

func (o *CreateRateCardRequestBody) GetCreditTypeConversions() []CreditTypeConversions {
	if o == nil {
		return nil
	}
	return o.CreditTypeConversions
}

func (o *CreateRateCardRequestBody) GetAliases() []Aliases {
	if o == nil {
		return nil
	}
	return o.Aliases
}

func (o *CreateRateCardRequestBody) GetCustomFields() map[string]string {
	if o == nil {
		return nil
	}
	return o.CustomFields
}

type CreateRateCardData struct {
	ID string `json:"id"`
}

func (o *CreateRateCardData) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// CreateRateCardResponseBody - Success
type CreateRateCardResponseBody struct {
	Data CreateRateCardData `json:"data"`
}

func (o *CreateRateCardResponseBody) GetData() CreateRateCardData {
	if o == nil {
		return CreateRateCardData{}
	}
	return o.Data
}

type CreateRateCardResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Object *CreateRateCardResponseBody
}

func (o *CreateRateCardResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateRateCardResponse) GetObject() *CreateRateCardResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
