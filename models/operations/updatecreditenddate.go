// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/Metronome-Industries/metronome-go-sdk/internal/utils"
	"github.com/Metronome-Industries/metronome-go-sdk/models/components"
	"time"
)

// UpdateCreditEndDateRequestBody - Update the access end date of a credit
type UpdateCreditEndDateRequestBody struct {
	// ID of the customer whose credit is to be updated
	CustomerID string `json:"customer_id"`
	// ID of the commit to update
	CreditID string `json:"credit_id"`
	// RFC 3339 timestamp indicating when access to the credit will end and it will no longer be possible to draw it down (exclusive).
	AccessEndingBefore time.Time `json:"access_ending_before"`
}

func (u UpdateCreditEndDateRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateCreditEndDateRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateCreditEndDateRequestBody) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *UpdateCreditEndDateRequestBody) GetCreditID() string {
	if o == nil {
		return ""
	}
	return o.CreditID
}

func (o *UpdateCreditEndDateRequestBody) GetAccessEndingBefore() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.AccessEndingBefore
}

type UpdateCreditEndDateData struct {
	ID string `json:"id"`
}

func (o *UpdateCreditEndDateData) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// UpdateCreditEndDateResponseBody - Success
type UpdateCreditEndDateResponseBody struct {
	Data UpdateCreditEndDateData `json:"data"`
}

func (o *UpdateCreditEndDateResponseBody) GetData() UpdateCreditEndDateData {
	if o == nil {
		return UpdateCreditEndDateData{}
	}
	return o.Data
}

type UpdateCreditEndDateResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Object *UpdateCreditEndDateResponseBody
}

func (o *UpdateCreditEndDateResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateCreditEndDateResponse) GetObject() *UpdateCreditEndDateResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
