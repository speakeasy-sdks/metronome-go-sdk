// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/Metronome-Industries/metronome-go-sdk/internal/utils"
	"github.com/Metronome-Industries/metronome-go-sdk/models/components"
	"time"
)

type UpdateRateCardAliases struct {
	Name         string     `json:"name"`
	StartingAt   *time.Time `json:"starting_at,omitempty"`
	EndingBefore *time.Time `json:"ending_before,omitempty"`
}

func (u UpdateRateCardAliases) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateRateCardAliases) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateRateCardAliases) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *UpdateRateCardAliases) GetStartingAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartingAt
}

func (o *UpdateRateCardAliases) GetEndingBefore() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndingBefore
}

// UpdateRateCardRequestBody - Update a rate card. Must provide at least one of name or description.
type UpdateRateCardRequestBody struct {
	// ID of the rate card to update
	RateCardID string `json:"rate_card_id"`
	// Used only in UI/API. It is not exposed to end customers.
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	// Reference this alias when creating a contract. If the same alias is assigned to multiple rate cards, it will reference the rate card to which it was most recently assigned. It is not exposed to end customers.
	Aliases      []UpdateRateCardAliases `json:"aliases,omitempty"`
	CustomFields map[string]string       `json:"custom_fields,omitempty"`
}

func (o *UpdateRateCardRequestBody) GetRateCardID() string {
	if o == nil {
		return ""
	}
	return o.RateCardID
}

func (o *UpdateRateCardRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateRateCardRequestBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateRateCardRequestBody) GetAliases() []UpdateRateCardAliases {
	if o == nil {
		return nil
	}
	return o.Aliases
}

func (o *UpdateRateCardRequestBody) GetCustomFields() map[string]string {
	if o == nil {
		return nil
	}
	return o.CustomFields
}

type UpdateRateCardData struct {
	ID string `json:"id"`
}

func (o *UpdateRateCardData) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// UpdateRateCardResponseBody - Success
type UpdateRateCardResponseBody struct {
	Data UpdateRateCardData `json:"data"`
}

func (o *UpdateRateCardResponseBody) GetData() UpdateRateCardData {
	if o == nil {
		return UpdateRateCardData{}
	}
	return o.Data
}

type UpdateRateCardResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Object *UpdateRateCardResponseBody
}

func (o *UpdateRateCardResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateRateCardResponse) GetObject() *UpdateRateCardResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
