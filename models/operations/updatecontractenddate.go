// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/metronome-go-sdk/internal/utils"
	"github.com/speakeasy-sdks/metronome-go-sdk/models/components"
	"time"
)

// UpdateContractEndDateRequestBody - Update the end date of a contract
type UpdateContractEndDateRequestBody struct {
	// ID of the customer whose contract is to be updated
	CustomerID string `json:"customer_id"`
	// ID of the contract to update
	ContractID string `json:"contract_id"`
	// RFC 3339 timestamp indicating when the contract will end (exclusive). If not provided, the contract will be updated to be open-ended.
	EndingBefore *time.Time `json:"ending_before,omitempty"`
}

func (u UpdateContractEndDateRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateContractEndDateRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateContractEndDateRequestBody) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *UpdateContractEndDateRequestBody) GetContractID() string {
	if o == nil {
		return ""
	}
	return o.ContractID
}

func (o *UpdateContractEndDateRequestBody) GetEndingBefore() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndingBefore
}

type UpdateContractEndDateData struct {
	ID string `json:"id"`
}

func (o *UpdateContractEndDateData) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// UpdateContractEndDateResponseBody - Success
type UpdateContractEndDateResponseBody struct {
	Data UpdateContractEndDateData `json:"data"`
}

func (o *UpdateContractEndDateResponseBody) GetData() UpdateContractEndDateData {
	if o == nil {
		return UpdateContractEndDateData{}
	}
	return o.Data
}

type UpdateContractEndDateResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Object *UpdateContractEndDateResponseBody
}

func (o *UpdateContractEndDateResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateContractEndDateResponse) GetObject() *UpdateContractEndDateResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
