// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/metronome-go-sdk/models/components"
)

// DisableCommitTrueupRequestBody - Information to identify the commit
type DisableCommitTrueupRequestBody struct {
	// ID of the customer whose commit is to be updated
	CustomerID string `json:"customer_id"`
	// ID of the commit to update
	CommitID string `json:"commit_id"`
	// ID of the contract that the commit is on
	ContractID string `json:"contract_id"`
	// If applicable, the amendment ID that the commit is on
	AmendmentID *string `json:"amendment_id,omitempty"`
}

func (o *DisableCommitTrueupRequestBody) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *DisableCommitTrueupRequestBody) GetCommitID() string {
	if o == nil {
		return ""
	}
	return o.CommitID
}

func (o *DisableCommitTrueupRequestBody) GetContractID() string {
	if o == nil {
		return ""
	}
	return o.ContractID
}

func (o *DisableCommitTrueupRequestBody) GetAmendmentID() *string {
	if o == nil {
		return nil
	}
	return o.AmendmentID
}

type DisableCommitTrueupData struct {
	ID string `json:"id"`
}

func (o *DisableCommitTrueupData) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// DisableCommitTrueupResponseBody - Success
type DisableCommitTrueupResponseBody struct {
	Data DisableCommitTrueupData `json:"data"`
}

func (o *DisableCommitTrueupResponseBody) GetData() DisableCommitTrueupData {
	if o == nil {
		return DisableCommitTrueupData{}
	}
	return o.Data
}

type DisableCommitTrueupResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Object *DisableCommitTrueupResponseBody
}

func (o *DisableCommitTrueupResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DisableCommitTrueupResponse) GetObject() *DisableCommitTrueupResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
