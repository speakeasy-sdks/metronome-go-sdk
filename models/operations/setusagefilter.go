// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/Metronome-Industries/metronome-go-sdk/internal/utils"
	"github.com/Metronome-Industries/metronome-go-sdk/models/components"
	"time"
)

// SetUsageFilterRequestBody - Set usage filter for contract
type SetUsageFilterRequestBody struct {
	CustomerID  string    `json:"customer_id"`
	ContractID  string    `json:"contract_id"`
	GroupKey    string    `json:"group_key"`
	GroupValues []string  `json:"group_values"`
	StartingAt  time.Time `json:"starting_at"`
}

func (s SetUsageFilterRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SetUsageFilterRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SetUsageFilterRequestBody) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *SetUsageFilterRequestBody) GetContractID() string {
	if o == nil {
		return ""
	}
	return o.ContractID
}

func (o *SetUsageFilterRequestBody) GetGroupKey() string {
	if o == nil {
		return ""
	}
	return o.GroupKey
}

func (o *SetUsageFilterRequestBody) GetGroupValues() []string {
	if o == nil {
		return []string{}
	}
	return o.GroupValues
}

func (o *SetUsageFilterRequestBody) GetStartingAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartingAt
}

type SetUsageFilterResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *SetUsageFilterResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
