// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/Metronome-Industries/metronome-go-sdk/models/components"
)

// ArchiveContractRequestBody - Archive a contract
type ArchiveContractRequestBody struct {
	// ID of the customer whose contract is to be archived
	CustomerID string `json:"customer_id"`
	// ID of the contract to archive
	ContractID string `json:"contract_id"`
	// If false, the existing finalized invoices will remain after the contract is archived.
	VoidInvoices bool `json:"void_invoices"`
}

func (o *ArchiveContractRequestBody) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *ArchiveContractRequestBody) GetContractID() string {
	if o == nil {
		return ""
	}
	return o.ContractID
}

func (o *ArchiveContractRequestBody) GetVoidInvoices() bool {
	if o == nil {
		return false
	}
	return o.VoidInvoices
}

type ArchiveContractData struct {
	ID string `json:"id"`
}

func (o *ArchiveContractData) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// ArchiveContractResponseBody - Success
type ArchiveContractResponseBody struct {
	Data ArchiveContractData `json:"data"`
}

func (o *ArchiveContractResponseBody) GetData() ArchiveContractData {
	if o == nil {
		return ArchiveContractData{}
	}
	return o.Data
}

type ArchiveContractResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Object *ArchiveContractResponseBody
}

func (o *ArchiveContractResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ArchiveContractResponse) GetObject() *ArchiveContractResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
