// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/metronome-go-sdk/internal/utils"
	"github.com/speakeasy-sdks/metronome-go-sdk/models/components"
	"time"
)

// AddManualBalanceLedgerEntryRequestBody - Add a manual ledger entry to a balance
type AddManualBalanceLedgerEntryRequestBody struct {
	// ID of the customer whose balance is to be updated.
	CustomerID string `json:"customer_id"`
	// ID of the contract to update. Leave blank to update a customer level balance.
	ContractID *string `json:"contract_id,omitempty"`
	// ID of the balance (commit or credit) to update.
	ID string `json:"id"`
	// ID of the segment to update.
	SegmentID string `json:"segment_id"`
	// Amount to add to the segment. A negative number will draw down from the balance.
	Amount float64 `json:"amount"`
	// Reason for the manual adjustment. This will be displayed in the ledger.
	Reason string `json:"reason"`
	// RFC 3339 timestamp indicating when the manual adjustment takes place. If not provided, it will default to the start of the segment.
	Timestamp *time.Time `json:"timestamp,omitempty"`
}

func (a AddManualBalanceLedgerEntryRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AddManualBalanceLedgerEntryRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AddManualBalanceLedgerEntryRequestBody) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *AddManualBalanceLedgerEntryRequestBody) GetContractID() *string {
	if o == nil {
		return nil
	}
	return o.ContractID
}

func (o *AddManualBalanceLedgerEntryRequestBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *AddManualBalanceLedgerEntryRequestBody) GetSegmentID() string {
	if o == nil {
		return ""
	}
	return o.SegmentID
}

func (o *AddManualBalanceLedgerEntryRequestBody) GetAmount() float64 {
	if o == nil {
		return 0.0
	}
	return o.Amount
}

func (o *AddManualBalanceLedgerEntryRequestBody) GetReason() string {
	if o == nil {
		return ""
	}
	return o.Reason
}

func (o *AddManualBalanceLedgerEntryRequestBody) GetTimestamp() *time.Time {
	if o == nil {
		return nil
	}
	return o.Timestamp
}

type AddManualBalanceLedgerEntryResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *AddManualBalanceLedgerEntryResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
