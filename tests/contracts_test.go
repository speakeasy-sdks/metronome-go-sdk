// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package tests

import (
	"context"
	metronomegosdk "github.com/speakeasy-sdks/metronome-go-sdk"
	"github.com/speakeasy-sdks/metronome-go-sdk/models/operations"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func TestContracts_DisableCommitTrueup_(t *testing.T) {
	s := metronomegosdk.New(
		metronomegosdk.WithSecurity("<YOUR_BEARER_TOKEN_HERE>"),
	)
	var request *operations.DisableCommitTrueupRequestBody = &operations.DisableCommitTrueupRequestBody{
		CustomerID: "13117714-3f05-48e5-a6e9-a66093f13b4d",
		CommitID:   "6162d87b-e5db-4a33-b7f2-76ce6ead4e85",
		ContractID: "7526bacf-f08a-47af-b473-bc57b88890e1",
	}
	ctx := context.Background()
	res, err := s.Contracts.DisableCommitTrueup(ctx, request)
	require.NoError(t, err)
	assert.Equal(t, 200, res.HTTPMeta.Response.StatusCode)
	assert.Equal(t, operations.DisableCommitTrueupResponseBody{
		Data: operations.DisableCommitTrueupData{
			ID: "6162d87b-e5db-4a33-b7f2-76ce6ead4e85",
		},
	}, *res.Object)
}

func TestContracts_CreateHistoricalContractUsageInvoices(t *testing.T) {
	s := metronomegosdk.New(
		metronomegosdk.WithSecurity("<YOUR_BEARER_TOKEN_HERE>"),
	)

	ctx := context.Background()
	res, err := s.Contracts.CreateHistoricalContractUsageInvoices(ctx, nil)
	require.NoError(t, err)
	assert.Equal(t, 200, res.HTTPMeta.Response.StatusCode)
	assert.Equal(t, operations.CreateHistoricalContractUsageInvoicesResponseBody{
		Data: []operations.CreateHistoricalContractUsageInvoicesData{
			operations.CreateHistoricalContractUsageInvoicesData{
				ID:         "89bd9d8d-69a6-474e-8f46-7cc8796ed151",
				CustomerID: "a05dfc2d-df7c-4c78-8a1b-a928fc816742",
				CreditType: operations.CreateHistoricalContractUsageInvoicesCreditType{
					Name: "<value>",
					ID:   "cb739205-9293-496f-aa75-96eb10faaa23",
				},
				InvoiceAdjustments: []operations.CreateHistoricalContractUsageInvoicesInvoiceAdjustments{
					operations.CreateHistoricalContractUsageInvoicesInvoiceAdjustments{
						Name:  "Monthly minimum ($1,000)",
						Total: 3581.52,
						CreditType: operations.CreateHistoricalContractUsageInvoicesContractsCreditType{
							Name: "<value>",
							ID:   "2c595590-7aff-41a3-a2fa-9467739251aa",
						},
					},
				},
				LineItems: []operations.CreateHistoricalContractUsageInvoicesLineItems{
					operations.CreateHistoricalContractUsageInvoicesLineItems{
						Name:  "<value>",
						Total: 3172.02,
						CreditType: operations.CreateHistoricalContractUsageInvoicesContractsResponseCreditType{
							Name: "<value>",
							ID:   "2c3f5ad0-19da-41ff-a78f-097b0074f154",
						},
					},
				},
				Status: "DRAFT, VOID, or FINALIZED",
				Total:  4808.94,
				Type:   "PLAN_ARREARS, SCHEDULED, USAGE, CORRECTION, CREDIT_PURCHASE, or SEAT_PURCHASE",
			},
		},
	}, *res.Object)
}
